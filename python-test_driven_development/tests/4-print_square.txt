===============================
apply doctest in 4-print_square
===============================

This library is very simple, since it only has one function called
``print_square()``.

``print_square()`` prints a full name.

import our function print_square()
	>>> print_square = __import__('4-print_square').print_square

let's use it :

Test case #0: Testing an integer size

>>> print_square(4)
####
####
####
####

>>> print_square(1)
#

>>> print_square(10)
##########
##########
##########
##########
##########
##########
##########
##########
##########
##########

>>> print_square(0)

Test case #1: Testing a negative integer size

>>> print_square(-1)
Traceback (most recent call last):
TypeError: size must be >= 0

Test case #2: Testing a string input

>>> print_square("Hello")
Traceback (most recent call last):
TypeError: size must be an integer

Test case #3: Testing a None input

>>> print_square(None)
Traceback (most recent call last):
TypeError: size must be an integer

Test case #4: Testing a positive Float input

>>> print_square(10.6855)
Traceback (most recent call last):
TypeError: size must be an integer

Test case #5: Testing a negative Float input
>>> print_square(-8.514)
Traceback (most recent call last):
TypeError: size must be an integer

