========================
testing add_integer
========================

Using ``add_integer``
--------------

First import
``add_integer`` from the ``0-add_integer`` module:

    >>> add_integer = __import__('0-add_integer').add_integer

Now use it:

    >>> add_integer(1, 2)
    3
    >>> add_integer(-1, 3)
    2
    >>> add_integer(1, -3)
    -2
    >>> add_integer(-2, -5)
    -7
    >>> add_integer(6, 4.24891)
    10
    >>> add_integer(3.14561, 7)
    10
    >>> add_integer(1.565445616, 2.568)
    3
    >>> add_integer(10)
    108
    >>> add_integer()
    Traceback (most recent call last):
        ...
    TypeError: add_integer() missing 1 required positional argument: 'a'
    >>> add_integer("hello", 4)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer
    >>> add_integer(6, "string")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer
    >>> add_integer("s1", "s2")
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer
    >>> add_integer(None, 5)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer
    >>> add_integer(8, None)
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer
    >>> add_integer(None, None)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer
